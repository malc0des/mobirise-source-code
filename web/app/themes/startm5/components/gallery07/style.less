padding-top: (@paddingTop * 1rem);
padding-bottom: (@paddingBottom * 1rem);

& when (@bg-type = "color") {
  background-color: @bg-value;
}

& when (@bg-type = "image") {
  background-image: url(@bg-value);
  & when (@overlay) {
    .mbr-overlay {
      background: @overlayColor;
      opacity: @overlayOpacity;
    }
  }
}

.item:focus,
span:focus {
  outline: none;
}

.item {
  cursor: pointer;
}

& when not (@spacing) {
  .grid-container {
    grid-row-gap: 0;
  }

  .grid-container-1,
  .grid-container-2,
  .grid-container-3 {
    gap: 0;
  }
}

& when (@spacing) {
  .grid-container {
    grid-row-gap: 2rem;

    @media (max-width: 767px) {
      grid-row-gap: 1rem;
    }
  }

  .grid-container-1,
  .grid-container-2,
  .grid-container-3 {
    gap: 0 2rem;

    @media (max-width: 767px) {
      gap: 0 1rem;
    }
  }
}

.mbr-section-title {
  color: #000000;
}

.mbr-text,
.mbr-section-btn {
  color: #000000;
}

.content-head {
  max-width: 800px;
}

.container,
.container-fluid {
  overflow: hidden;
}

.grid-container {
  display: grid;
  transform: translate3d(-3rem, 0, 0);
  width: 115vw;
  grid-column-gap: 1rem;
}

.grid-item {
  display: flex;
  justify-content: center;
  align-items: center;
}

.grid-item img {
  @media (max-width: 767px) {
    min-width: 35vw;
  }
  min-width: 30vw;
  max-width: 100%;
  max-height: 100%;
  object-fit: cover;
}

.grid-container-1,
.grid-container-2,
.grid-container-3 {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
}

.grid-container-1 {  
  align-items: flex-end;
}

.grid-container-2 {
  align-items: flex-start;
}
